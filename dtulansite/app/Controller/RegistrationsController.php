<?php
 App::uses('CakeEmail', 'Network/Email');

class RegistrationsController extends AppController{

	public function beforeFilter() {
		$this->Auth->allow('add');
	}

	public function isAuthorized($user) {
		$this->Auth->allow(array('index','add', 'edit', 'delete'));
	}

    public function index() {
        $this->Registration->recursive = 0;
        $this->set('registrations', $this->paginate());
    }

    public function view($id = null) {
        $this->Registration->id = $id;
        if (!$this->Registration->exists()) {
            throw new NotFoundException(__('Invalid user'));
        }
        $this->set('registration', $this->Registration->read(null, $id));
    }

    public function viewAll (){
        $this->set('registrations', $this->Registration->find('all'));
    }

    public function add() {
        if ($this->request->is('post')) {

            $this->request->data['Registration']['creation_time'] = date('Y-m-d H:i:s');

            $this->Registration->create();

			$name = $this->request->data['Registration']['first_name'].' '.$this->request->data['Registration']['last_name'];

            if ($this->Registration->save($this->request->data)) {

				$id = $this->Registration->getLastInsertID();

                $this->Session->setFlash(__('The user has been saved'));

				$msg.='<h2>Hey '.$name.'</h2>';
				$msg ='This is an autogenerated email from the DTU LAN site.';
				$msg.='<br />';
				$msg.='To finish the activation proccess, You have to select a personal password for Your account by using the activation-link below.';
				$msg.='<br />';
				$msg.='<a href="http://dtu-lan.dk/activate/'.$id.'">http://dtu-lan.dk/activate/'.$id.'</a>';
				$msg.='<br /><br />';
				$msg.='Best regards';
				$msg.='<br />';
				$msg.='The DTU LAN crew';

//				$email = new CakeEmail();
//				$email->from(array('admin@DTU-Lan.dk' => 'DTU-Lan'));
//				$email->to($this->request->data['Registration']['email']);
//				$email->subject('DTU-Lan Activation');
//				$email->send($msg);

				echo $msg;

//                $this->redirect(array('action' => 'index'));
            } else {
                $this->Session->setFlash(__('The user could not be saved. Please, try again.'));
            }
        }
    }

    public function edit($id = null) {
        $this->Registration->id = $id;
        $this->set('registration', $this->Registration->read(null, $id));
        if (!$this->Registration->exists()) {
            throw new NotFoundException(__('Invalid user'));
        }
        if ($this->request->is('post') || $this->request->is('put')) {
            if ($this->Registration->save($this->request->data)) {
                $this->Session->setFlash(__('The user has been saved'));
                $this->redirect(array('action' => 'viewAll'));
            } else {
                $this->Session->setFlash(__('The user could not be saved. Please, try again.'));
            }
        } else {
            $this->request->data = $this->Registration->read(null, $id);
            //unset($this->request->data['User']['password']);
        }
    }

    public function delete($id = null) {
        $this->Registration->id = $id;
        if (!$this->Registration->exists()) {
            throw new NotFoundException(__('Invalid user'));
        }
		$this->Registration->delete();
    }

}

?>
